{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Copy of LS_DS_114_Make_Explanatory_Visualizations_Assignment.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.1"
    },
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/AndrewArnett/DS-Unit-1-Sprint-1-Data-Wrangling-and-Storytelling/blob/master/DS-Unit-1-Sprint-1-Data-Wrangling-and-Storytelling/module4-make-explanatory-visualizations\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "colab_type": "text",
        "id": "NMEswXWh9mqw"
      },
      "source": [
        "Lambda School Data Science\n",
        "\n",
        "*Unit 1, Sprint 1, Module 4*\n",
        "\n",
        "---\n",
        "\n",
        "# ASSIGNMENT\n",
        "\n",
        "### 1) Replicate the lesson code. I recommend that you [do not copy-paste](https://docs.google.com/document/d/1ubOw9B3Hfip27hF2ZFnW3a3z9xAgrUDRReOEo-FHCVs/edit).\n",
        "\n",
        "Get caught up to where we got our example in class and then try and take things further. How close to \"pixel perfect\" can you make the lecture graph?\n",
        "\n",
        "Once you have something that you're proud of, share your graph in the cohort channel and move on to the second exercise.\n",
        "\n",
        "### 2) Reproduce another example from [FiveThityEight's shared data repository](https://data.fivethirtyeight.com/).\n",
        "\n",
        "**WARNING**: There are a lot of very custom graphs and tables at the above link. I **highly** recommend not trying to reproduce any that look like a table of values or something really different from the graph types that we are already familiar with. Search through the posts until you find a graph type that you are more or less familiar with: histogram, bar chart, stacked bar chart, line chart, [seaborn relplot](https://seaborn.pydata.org/generated/seaborn.relplot.html), etc. Recreating some of the graphics that 538 uses would be a lot easier in Adobe photoshop/illustrator than with matplotlib. \n",
        "\n",
        "- If you put in some time to find a graph that looks \"easy\" to replicate you'll probably find that it's not as easy as you thought. \n",
        "\n",
        "- If you start with a graph that looks hard to replicate you'll probably run up against a brick wall and be disappointed with your afternoon.\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7SY1ZHawyZvz",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 264
        },
        "outputId": "4b22c5ea-e35d-4ebd-857e-7c6b13fc8b1e"
      },
      "source": [
        "# Your Work Here\n",
        "%matplotlib inline\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "from matplotlib.ticker import (MultipleLocator, FormatStrFormatter, AutoMinorLocator)\n",
        "\n",
        "graph = pd.Series([38, 3, 2, 1, 2.5, 4, 5.5, 5, 5, 33],\n",
        "                  index=range(1,11))\n",
        "\n",
        "graph.plot.bar();"
      ],
      "execution_count": 130,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dBEKhGuAy1cq",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 330
        },
        "outputId": "d5910117-52c5-4239-cf62-73b4684b9407"
      },
      "source": [
        "plt.style.use('fivethirtyeight')\n",
        "\n",
        "fig, ax = plt.subplots()\n",
        "\n",
        "fig.patch.set_facecolor('white')\n",
        "\n",
        "ax.bar(x=[1,2,3,4,5,6,7,8,9,10], height=graph, color='#ED713A', width=.9)\n",
        "\n",
        "ax.set_facecolor('white')\n",
        "\n",
        "ax.set_yticks(range(0, 50, 10))\n",
        "ax.set_yticklabels(['0', '10', '20', '30', '40%'], color='#C4C4C4', fontsize=10)\n",
        "\n",
        "ax.set_xticks(range(1,11,1))\n",
        "ax.set_xticklabels(range(1,11,1), color='#C4C4C4', fontsize=10)\n",
        "\n",
        "ax.set_xlabel('Rating', x=.48, fontsize=9, fontweight='bold')\n",
        "\n",
        "ax.set_ylabel('Percent of total votes', fontsize=10, fontweight='bold')\n",
        "\n",
        "ax.set_title(\"'An Inconvenient Sequel: Truth to Power' is divisive\", x=.35, y=1.1, fontsize='12', fontweight='bold')\n",
        "\n",
        "ax.text(s='IMDb ratings for the film as of Aug. 29', x=-1.2, y=42, fontsize='11')\n",
        "\n",
        "ax.spines['left'].set_visible(False)\n",
        "ax.spines['right'].set_visible(False)\n",
        "ax.spines['top'].set_visible(False)\n",
        "ax.spines['bottom'].set_visible(False)\n",
        "\n",
        "plt.show()"
      ],
      "execution_count": 131,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "glFTd-wlOBwA",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "df = pd.DataFrame({'Elo_Rating': [1530, 1540, 1535, 1560, 1545, 1570, 1545, 1590, 1575, 1605, 1580, 1620, \n",
        "                1610, 1625, 1590, 1610, 1560, 1620, 1615, 1665, 1668, 1720, 1700, 1720, \n",
        "                1695, 1710, 1705, 1710, 1610, 1645, 1635, 1650, 1638, 1645, 1605, 1655, \n",
        "                1650, 1665, 1660, 1664, 1645, 1660, 1650, 1652, 1590, 1605, 1575, 1625, \n",
        "                1620, 1685, 1670, 1687, 1680, 1655, 1690, 1710, 1740],\n",
        "                'Games': [1, 2, 3, 5, 6, 8, 10, 12, 14, 16, 18, 19, 22, 24, 26, 30, 32, 36, 38, 42, 44, \n",
        "                          50, 52, 56, 59, 61, 63, 64, 66, 69, 71, 74, 76, 78, 81, 83, 90, 92, 94, 96, 98, \n",
        "                          101, 103, 104, 107, 109, 111, 113, 115, 122, 124, 126, 129, 132, 134, 136, 141]})"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZD6l0XzFOBzP",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "6ab8c67c-88eb-48f9-840b-b2a06e31ae19"
      },
      "source": [
        "df.head()"
      ],
      "execution_count": 148,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Elo_Rating</th>\n",
              "      <th>Games</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1530</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1540</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1535</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1560</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1545</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   Elo_Rating  Games\n",
              "0        1530      1\n",
              "1        1540      2\n",
              "2        1535      3\n",
              "3        1560      5\n",
              "4        1545      6"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 148
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xQjfoOm8OB2q",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 389
        },
        "outputId": "6c5ddce9-96ca-4d6a-9d9a-53f60feb436e"
      },
      "source": [
        "fig, ax = plt.subplots()\n",
        "\n",
        "ax.plot(df['Games'], df['Elo_Rating'], color='#FF3628', linewidth=2.5)\n",
        "\n",
        "ax.set_yticks(range(1500,1900,100))\n",
        "ax.set_yticklabels(['1500', '1600', '1700', '1800'], color='#C4C4C4', fontsize='11')\n",
        "\n",
        "ax.set_xticks(range(0,160,20))\n",
        "ax.set_xticklabels([0, 20, 40, 60, 80, 100, 120, 140], color='#C4C4C4', fontsize='11')\n",
        "\n",
        "ax.set_title('How Houston became the best WNBA team ever', x=.41, y=1.2, fontsize='14', fontweight='bold')\n",
        "ax.text(s='Game-by-game Elo rating for the Houston Comets, 1997-2000', x=-21, y=1850, fontsize='12')\n",
        "\n",
        "ax.xaxis.set_major_locator(MultipleLocator(20))\n",
        "ax.xaxis.set_major_formatter(FormatStrFormatter('%d'))\n",
        "\n",
        "ax.set_xlabel('Game number', fontsize=10, fontweight='bold')\n",
        "\n",
        "ax.text(s='_'*60, y=1425, x=-20, color='#C4C4C4')\n",
        "\n",
        "plt.show()"
      ],
      "execution_count": 171,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "X44BPbwuEBVp",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 408
        },
        "outputId": "f702117b-76af-4d38-ee5c-6365105b42d6"
      },
      "source": [
        "from IPython.display import display, Image\n",
        "\n",
        "url = 'https://fivethirtyeight.com/wp-content/uploads/2020/05/Paine-Cynthia-Cooper-0526-1.png?w=575'\n",
        "example = Image(url=url, width=445)\n",
        "\n",
        "display(example)"
      ],
      "execution_count": 79,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "<img src=\"https://fivethirtyeight.com/wp-content/uploads/2020/05/Paine-Cynthia-Cooper-0526-1.png?w=575\" width=\"445\"/>"
            ],
            "text/plain": [
              "<IPython.core.display.Image object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ExKKTK2XOB72",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2by3-Wt1OB_o",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0wSrBzmJyWaV",
        "colab_type": "text"
      },
      "source": [
        "# STRETCH OPTIONS\n",
        "\n",
        "### 1) Reproduce one of the following using the matplotlib or seaborn libraries:\n",
        "\n",
        "- [thanksgiving-2015](https://fivethirtyeight.com/features/heres-what-your-part-of-america-eats-on-thanksgiving/) \n",
        "- [candy-power-ranking](https://fivethirtyeight.com/features/the-ultimate-halloween-candy-power-ranking/) \n",
        "- or another example of your choice!\n",
        "\n",
        "### 2) Make more charts!\n",
        "\n",
        "Choose a chart you want to make, from [Visual Vocabulary - Vega Edition](http://ft.com/vocabulary).\n",
        "\n",
        "Find the chart in an example gallery of a Python data visualization library:\n",
        "- [Seaborn](http://seaborn.pydata.org/examples/index.html)\n",
        "- [Altair](https://altair-viz.github.io/gallery/index.html)\n",
        "- [Matplotlib](https://matplotlib.org/gallery.html)\n",
        "- [Pandas](https://pandas.pydata.org/pandas-docs/stable/visualization.html)\n",
        "\n",
        "Reproduce the chart. [Optionally, try the \"Ben Franklin Method.\"](https://docs.google.com/document/d/1ubOw9B3Hfip27hF2ZFnW3a3z9xAgrUDRReOEo-FHCVs/edit) If you want, experiment and make changes.\n",
        "\n",
        "Take notes. Consider sharing your work with your cohort!"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "dRJkKftiy5BJ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# More Work Here"
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}